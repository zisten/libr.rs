// automatically generated by rust-bindgen

extern "C" {
    pub fn dpbfa_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_int,
        arg5: *mut ::libc::c_int,
    ) -> ();
    pub fn dpbsl_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_int,
        arg5: *mut ::libc::c_double,
    ) -> ();
    pub fn dpoco_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_double,
        arg5: *mut ::libc::c_double,
        arg6: *mut ::libc::c_int,
    ) -> ();
    pub fn dpodi_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_double,
        arg5: *mut ::libc::c_int,
    ) -> ();
    pub fn dpofa_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_int,
    ) -> ();
    pub fn dposl_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_double,
    ) -> ();
    pub fn dqrdc_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_int,
        arg5: *mut ::libc::c_double,
        arg6: *mut ::libc::c_int,
        arg7: *mut ::libc::c_double,
        arg8: *mut ::libc::c_int,
    ) -> ();
    pub fn dqrsl_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_int,
        arg5: *mut ::libc::c_double,
        arg6: *mut ::libc::c_double,
        arg7: *mut ::libc::c_double,
        arg8: *mut ::libc::c_double,
        arg9: *mut ::libc::c_double,
        arg10: *mut ::libc::c_double,
        arg11: *mut ::libc::c_double,
        arg12: *mut ::libc::c_int,
        arg13: *mut ::libc::c_int,
    ) -> ();
    pub fn dsvdc_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_int,
        arg5: *mut ::libc::c_double,
        arg6: *mut ::libc::c_double,
        arg7: *mut ::libc::c_double,
        arg8: *mut ::libc::c_int,
        arg9: *mut ::libc::c_double,
        arg10: *mut ::libc::c_int,
        arg11: *mut ::libc::c_double,
        arg12: *mut ::libc::c_int,
        arg13: *mut ::libc::c_int,
    ) -> ();
    pub fn dtrco_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_double,
        arg5: *mut ::libc::c_double,
        arg6: *mut ::libc::c_int,
    ) -> ();
    pub fn dtrsl_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_double,
        arg5: *mut ::libc::c_int,
        arg6: *mut ::libc::c_int,
    ) -> ();
    pub fn dchdc_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_double,
        arg5: *mut ::libc::c_int,
        arg6: *mut ::libc::c_int,
        arg7: *mut ::libc::c_int,
    ) -> ();
    pub fn dchdd_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_double,
        arg5: *mut ::libc::c_double,
        arg6: *mut ::libc::c_int,
        arg7: *mut ::libc::c_int,
        arg8: *mut ::libc::c_double,
        arg9: *mut ::libc::c_double,
        arg10: *mut ::libc::c_double,
        arg11: *mut ::libc::c_double,
        arg12: *mut ::libc::c_int,
    ) -> ();
    pub fn dchex_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_int,
        arg5: *mut ::libc::c_int,
        arg6: *mut ::libc::c_double,
        arg7: *mut ::libc::c_int,
        arg8: *mut ::libc::c_int,
        arg9: *mut ::libc::c_double,
        arg10: *mut ::libc::c_double,
        arg11: *mut ::libc::c_int,
    ) -> ();
    pub fn dchud_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_double,
        arg5: *mut ::libc::c_double,
        arg6: *mut ::libc::c_int,
        arg7: *mut ::libc::c_int,
        arg8: *mut ::libc::c_double,
        arg9: *mut ::libc::c_double,
        arg10: *mut ::libc::c_double,
        arg11: *mut ::libc::c_double,
    ) -> ();
    pub fn dgbco_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_int,
        arg5: *mut ::libc::c_int,
        arg6: *mut ::libc::c_int,
        arg7: *mut ::libc::c_double,
        arg8: *mut ::libc::c_double,
    ) -> ();
    pub fn dgbdi_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_int,
        arg5: *mut ::libc::c_int,
        arg6: *mut ::libc::c_int,
        arg7: *mut ::libc::c_double,
    ) -> ();
    pub fn dgbfa_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_int,
        arg5: *mut ::libc::c_int,
        arg6: *mut ::libc::c_int,
        arg7: *mut ::libc::c_int,
    ) -> ();
    pub fn dgbsl_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_int,
        arg5: *mut ::libc::c_int,
        arg6: *mut ::libc::c_int,
        arg7: *mut ::libc::c_double,
        arg8: *mut ::libc::c_int,
    ) -> ();
    pub fn dgeco_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_int,
        arg5: *mut ::libc::c_double,
        arg6: *mut ::libc::c_double,
    ) -> ();
    pub fn dgedi_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_int,
        arg5: *mut ::libc::c_double,
        arg6: *mut ::libc::c_double,
        arg7: *mut ::libc::c_int,
    ) -> ();
    pub fn dgefa_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_int,
        arg5: *mut ::libc::c_int,
    ) -> ();
    pub fn dgesl_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_int,
        arg5: *mut ::libc::c_double,
        arg6: *mut ::libc::c_int,
    ) -> ();
    pub fn dgtsl_(
        arg1: *mut ::libc::c_int,
        arg2: *mut ::libc::c_double,
        arg3: *mut ::libc::c_double,
        arg4: *mut ::libc::c_double,
        arg5: *mut ::libc::c_double,
        arg6: *mut ::libc::c_int,
    ) -> ();
    pub fn dpbco_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_int,
        arg5: *mut ::libc::c_double,
        arg6: *mut ::libc::c_double,
        arg7: *mut ::libc::c_int,
    ) -> ();
    pub fn dpbdi_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_int,
        arg5: *mut ::libc::c_double,
    ) -> ();
    pub fn dppco_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_double,
        arg4: *mut ::libc::c_double,
        arg5: *mut ::libc::c_int,
    ) -> ();
    pub fn dppdi_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_double,
        arg4: *mut ::libc::c_int,
    ) -> ();
    pub fn dppfa_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
    ) -> ();
    pub fn dppsl_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_double,
    ) -> ();
    pub fn dptsl_(
        arg1: *mut ::libc::c_int,
        arg2: *mut ::libc::c_double,
        arg3: *mut ::libc::c_double,
        arg4: *mut ::libc::c_double,
    ) -> ();
    pub fn dsico_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_int,
        arg5: *mut ::libc::c_double,
        arg6: *mut ::libc::c_double,
    ) -> ();
    pub fn dsidi_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_int,
        arg5: *mut ::libc::c_double,
        arg6: *mut ::libc::c_int,
        arg7: *mut ::libc::c_double,
        arg8: *mut ::libc::c_int,
    ) -> ();
    pub fn dsifa_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_int,
        arg5: *mut ::libc::c_int,
    ) -> ();
    pub fn dsisl_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_int,
        arg5: *mut ::libc::c_double,
    ) -> ();
    pub fn dspco_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_double,
        arg5: *mut ::libc::c_double,
    ) -> ();
    pub fn dspdi_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_double,
        arg5: *mut ::libc::c_int,
        arg6: *mut ::libc::c_double,
        arg7: *mut ::libc::c_int,
    ) -> ();
    pub fn dspfa_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_int,
    ) -> ();
    pub fn dspsl_(
        arg1: *mut ::libc::c_double,
        arg2: *mut ::libc::c_int,
        arg3: *mut ::libc::c_int,
        arg4: *mut ::libc::c_double,
    ) -> ();
}

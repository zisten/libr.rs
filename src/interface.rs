// automatically generated by rust-bindgen
pub use super::ext::boolean::*;
pub use super::ext::r_startup::*;
pub use libc::FILE;

#[allow(non_snake_case)]
#[allow(non_upper_case_globals)]

extern "C" {
    pub static mut R_Interactive: Rboolean;
    pub static mut R_Slave: Rboolean;
    pub static mut R_DirtyImage: ::libc::c_int;
    pub static mut R_GUIType: *mut ::libc::c_char;
    pub static mut R_HistoryFile: *mut ::libc::c_char;
    pub static mut R_HistorySize: ::libc::c_int;
    pub static mut R_RestoreHistory: ::libc::c_int;
    pub static mut R_Home: *mut ::libc::c_char;
    pub static mut R_GlobalContext: *mut ::libc::c_void;
    pub static mut R_Consolefile: *mut FILE;
    pub static mut R_Outputfile: *mut FILE;
    pub static mut R_timeout_val: ::libc::c_long;
    pub static mut R_SignalHandlers: ::libc::c_int;
    pub static mut R_CStackLimit: ::libc::uintptr_t;
    pub static mut R_CStackStart: ::libc::uintptr_t;
    pub static mut R_running_as_main_program: ::libc::c_int;
}

extern "C" {
    pub fn R_RestoreGlobalEnv() -> ();
    pub fn R_RestoreGlobalEnvFromFile(arg1: *const ::libc::c_char, arg2: Rboolean) -> ();
    pub fn R_SaveGlobalEnv() -> ();
    pub fn R_SaveGlobalEnvToFile(arg1: *const ::libc::c_char) -> ();
    pub fn R_FlushConsole() -> ();
    pub fn R_ClearerrConsole() -> ();
    pub fn R_Suicide(arg1: *const ::libc::c_char) -> ();
    pub fn R_HomeDir() -> *mut ::libc::c_char;
    pub fn R_setupHistory() -> ();
    pub fn Rf_jump_to_toplevel() -> ();
    pub fn Rf_mainloop() -> ();
    pub fn Rf_onintr() -> ();
    pub fn process_site_Renviron() -> ();
    pub fn process_system_Renviron() -> ();
    pub fn process_user_Renviron() -> ();
    pub fn R_setStartTime() -> ();
    pub fn fpu_setup(arg1: Rboolean) -> ();
}

pub unsafe fn jump_to_toplevel() {
    Rf_jump_to_toplevel()
}
pub unsafe fn mainloop() {
    Rf_mainloop()
}
pub unsafe fn onintr() {
    Rf_onintr()
}
